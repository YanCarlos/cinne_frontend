{"version":3,"sources":["components/commons/CustomLink.js","components/SideBar.js","components/movie/helpers/form_validator.js","services/ApiConfig.js","helpers/date.js","services/MovieService.js","components/commons/NewMovieButton.js","components/commons/CustomModal.js","helpers/errors_handler.js","components/movie/components/CreateMovie.jsx","services/BookingService.js","components/booking/components/BookingsList.jsx","components/booking/helpers/form_validator.js","components/booking/components/CreateBooking.jsx","components/movie/components/Movie.jsx","components/movie/components/MoviesList.jsx","components/Yield.js","App.js","serviceWorker.js","index.js"],"names":["CustomLink","text","to","activeOnlyWhenExact","icon","match","useRouteMatch","path","exact","className","SideBar","faCalendar","faFilm","FormValidator","Yup","shape","name","required","description","image_url","url","schedules_attributes","min","API_URL","process","REACT_APP_API_URL","headers","Authorization","REACT_APP_API_KEY","parse_date","date","moment","format","MovieService","axios","get","values","console","log","method","data","then","response","status","Promise","reject","catch","error","NewMovieButton","onclick","disabled","Button","color","onClick","faPlus","CustomModal","Modal","isOpen","this","props","show","toggle","centered","size","ModalHeader","title","ModalBody","children","React","Component","errorsHandler","errors","Object","keys","map","index","key","initialValues","Date","CreateMovie","state","showModal","modalMessage","modalTitle","messageOptions","setState","validationSchema","onSubmit","setSubmitting","resetForm","create","openModal","onSuccess","err","message","isSubmitting","touched","setFieldValue","setFieldTouched","Row","Col","FormGroup","Label","for","Input","type","id","tag","Field","invalid","Boolean","aria-required","component","FormFeedback","lg","render","arrayHelpers","schedules","selected","dateFormat","onChange","remove","faMinus","push","BookingService","schedule_id","BookingsList","bookings","loading","startDate","fetchBookings","all","result","Container","fluid","sm","xs","showPopperArrow","renderLoader","length","Table","responsive","booking","movie_name","email","identification","phone","Movie","newBooking","src","alt","onLoad","imageLoaded","bind","can_booking","closeButtonText","CreateBooking","MoviesList","movies","newMovie","fetchMovies","movie","Yield","App","window","location","hostname","require","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e0095f4e.chunk.js","sourcesContent":["import React from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default function CustomLink({text, to, activeOnlyWhenExact, icon}) {\n  let match = useRouteMatch({\n    path: to,\n    exact: activeOnlyWhenExact\n  });\n\n  return (\n    <li className={match ? \"active-link\" : \"\"}>\n      { icon &&\n        <FontAwesomeIcon icon={icon} className=\"icon color-white mr-10\"/>\n      }\n      <Link to={to}>{text}</Link>\n    </li>\n  );;\n}\n","import React from 'react';\nimport { faCalendar, faFilm } from '@fortawesome/free-solid-svg-icons';\nimport CustomLink from './commons/CustomLink';\n\nfunction SideBar() {\n  return (\n    <div className=\"leftbar\">\n      <div className=\"logo\">\n        <span className=\"place\">\n          Place\n        </span>\n        <span className=\"it\">\n          it\n        </span>\n      </div>\n      <nav>\n        <ul>\n          <CustomLink to=\"/reservas\" text=\"Reservas\" icon={faCalendar} activeOnlyWhenExact={true}/>\n          <CustomLink to=\"/\" text=\"Peliculas\" icon={faFilm} activeOnlyWhenExact={true} />\n        </ul>\n      </nav>\n    </div>\n  )\n}\nexport default SideBar;\n","import * as Yup from 'yup'\n\nexport const FormValidator = Yup.object().shape({\n  name: Yup.string()\n    .required('El nombre es requerido.'),\n  description: Yup.string()\n    .required('La descripción es requerida.'),\n  image_url: Yup.string()\n    .required('La url de la imagen es requerida')\n    .url('Esto debe ser una URL valida'),\n  schedules_attributes: Yup.array()\n\t  .min(1,'Debes seleccionar por lo menos una fecha.')\n\t  .required('Las fechas son requeridas.')\n})\n","const API_URL = process.env.REACT_APP_API_URL;\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst headers = {\n  Authorization: 'Token token=' + API_KEY \n};\n\nexport { API_URL, headers};\n","import moment from 'moment';\n\nexport function parse_date(date){\n\treturn moment(date).format('DD/M/YYYY');\n}\n","import axios from 'axios';\nimport { API_URL, headers} from './ApiConfig';\nimport { parse_date } from '../helpers/date';\n\nclass MovieService {\n  static all(date) {\n    return axios.get(API_URL + \"/movies?date=\" + parse_date(date), { 'headers': headers })\n  }\n\n  static create(values) {\n    console.log(values);\n    return axios({\n      method: 'post',\n      url: API_URL + \"/movies\" ,\n      data: { \"movie\": values },\n      headers: headers\n    })\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(response.response);\n      }\n    })\n    .catch(error => {\n      return Promise.reject(error.response);\n    })\n  }\n}\n\nexport default MovieService;\n","import React  from 'react';\nimport { Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nfunction NewMovieButton({onclick, disabled}) {\n  return(\n    <Button color=\"primary\" onClick={onclick} disabled={disabled}>\n      <FontAwesomeIcon icon={faPlus} className=\"icon\"/>\n      Crear nueva película\n    </Button>\n  )\n}\n\nexport default NewMovieButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { \n  Modal, \n  ModalHeader, \n  ModalBody} from 'reactstrap';\n\n\nclass CustomModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.show} toggle={this.props.toggle} centered={this.props.centered} size={this.props.size}>\n        <ModalHeader toggle={this.props.toggle}>{this.props.title} </ModalHeader>\n        <ModalBody>\n          {this.props.children}\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\n\nCustomModal.propTypes = {\n  show: PropTypes.bool,\n  toggle: PropTypes.func,\n  title: PropTypes.string,\n  centered: PropTypes.bool,\n  size: PropTypes.string\n};\n\nexport default CustomModal;\n","import React from 'react';\n\nexport default function errorsHandler(errors) {\n  return (\n    <div>\n    {\n      Object.keys(errors).map((error, index) => (\n        <div key={index}>{errors[error]}</div>\n      ))\n    }\n    </div>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormFeedback,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Col,\n  Row\n} from 'reactstrap';\nimport { Formik, Form, Field, ErrorMessage, FieldArray } from 'formik';\nimport { FormValidator } from '../helpers/form_validator';\nimport MovieService from '../../../services/MovieService';\nimport NewMovieButton from '../../commons/NewMovieButton';\nimport CustomModal from '../../commons/CustomModal';\nimport DatePicker from 'react-datepicker';\nimport errorsHandler from '../../../helpers/errors_handler';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst initialValues={\n  name: '',\n  description: '',\n  image_url: '',\n  schedules_attributes: [ { 'date': new Date() }],\n}\n\nclass CreateMovie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      modalMessage: '',\n      modalTitle: ''\n    } \n  }\n\n  openModal(messageOptions, title){\n    this.setState({\n      modalMessage: messageOptions,\n      showModal: true,\n      modalTitle: title,\n    })\n  }\n\n  render() {\n    return(\n      <div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={FormValidator}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n\n            MovieService.create(values)\n              .then(\n                () => {\n                  setSubmitting(false);\n                  this.openModal('La pelicula se guardó correctamente!', 'Pelicula guardada');\n                  resetForm(initialValues);\n                  this.props.onSuccess();\n                },\n                err => {\n                  setSubmitting(false)\n                  this.openModal(errorsHandler(err.data.message), 'Error');\n                }\n              )\n          }}\n        >\n          {({ values, errors, isSubmitting, touched, setFieldValue, setFieldTouched }) => (\n            <Form className=\"py-4\">\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"name\" className=\"font-weight-bold\">Nombre: *</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      tag={Field}\n                      invalid={Boolean(touched.name && errors.name)}\n                      aria-required\n                    />\n                    <ErrorMessage name=\"name\" component={FormFeedback} />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"description\" className=\"font-weight-bold\">Descripción: *</Label>\n                    <Input\n                      type=\"textarea\"\n                      name=\"description\"\n                      id=\"description\"\n                      tag={Field}\n                      invalid={Boolean(touched.description && errors.description)}\n                      aria-required\n                      component='textarea'\n                    />\n                    <ErrorMessage name=\"description\" component={FormFeedback} />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"image_url\" className=\"font-weight-bold\">Url de la imagen: </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"image_url\"\n                      id=\"image_url\"\n                      tag={Field}\n                      invalid={Boolean(touched.image_url && errors.image_url)}\n                      aria-required\n                    />\n                    <ErrorMessage name=\"image_url\" component={FormFeedback} />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col lg=\"12\">\n                  {\n                    Boolean(touched.schedules_attributes && errors.schedules_attributes) &&\n                    <div className=\"invalid-feedback d-block\">\n                      {errors.schedules_attributes}\n                    </div>\n                  }\n                </Col>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"schedules_attributes\" className=\"font-weight-bold\">Fechas: </Label>\n                    <FieldArray\n                      name=\"schedules_attributes\"\n                      render={arrayHelpers => (\n                        <div className=\"dates-selector\">\n                          {values.schedules_attributes.map((schedules, index) => (\n                            <div key={index} className=\"date d-flex justify-content-start align-items-center mb-10\">\n                              <div>\n                                <DatePicker \n                                  selected={values.schedules_attributes[index].date}\n                                  dateFormat=\"MMMM d, yyyy\"\n                                  className=\"form-control\"\n                                  name={`schedules_attributes[${index}].date`}\n                                  onChange={date => setFieldValue(`schedules_attributes[${index}].date`, date)}\n                                  invalid={Boolean(touched.schedules_attributes && errors.schedules_attributes)}\n                                />\n                              </div>\n                              <Button className=\"round-button danger\" onClick={() => arrayHelpers.remove(index)}>\n                                <FontAwesomeIcon icon={faMinus} className=\"icon\"/>\n                              </Button>\n                              <Button className=\"round-button success\" onClick={() => arrayHelpers.push({ date: new Date() })}>\n                                <FontAwesomeIcon icon={faPlus} className=\"icon\"/>\n                              </Button>\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <div className=\"d-flex justify-content-end\">\n                <NewMovieButton disabled={isSubmitting}/>  \n              </div>\n            </Form>\n          )}\n        </Formik>\n        { this.state.showModal &&\n          <CustomModal \n            show={this.state.showModal}\n            toggle={() => this.setState({ showModal: false })}\n            title={this.state.modalTitle}\n            centered\n          >\n            <Row>\n              <Col lg=\"12\">\n                {this.state.modalMessage}\n              </Col>\n            </Row>\n            <br/>\n            <Row>\n              <Col lg=\"12\" className=\"d-flex justify-content-end\">\n                <Button color=\"primary\" onClick={() => this.setState({ showModal: false })}>\n                  Aceptar\n                </Button>\n              </Col>\n            </Row>\n          </CustomModal>\n        }\n      </div>\n    )\n  }\n}\n\nCreateMovie.propTypes = {\n  onSuccess: PropTypes.func,\n}\n\nexport default CreateMovie;\n","import axios from 'axios';\nimport { API_URL, headers} from './ApiConfig';\nimport { parse_date } from '../helpers/date';\n\n\nclass BookingService {\n  static all(date) {\n    return axios.get(API_URL + \"/schedules/bookings?date=\" + parse_date(date), { 'headers': headers })\n  }\n\n  static create(values, schedule_id) {\n    return axios({\n      method: 'post',\n      url: API_URL + \"/schedules/\" + schedule_id + \"/bookings\",\n      data: { \"booking\": values },\n      headers: headers\n    })\n    .then(response => {\n      if (response.status !== 200) {\n        return Promise.reject(response.response);\n      }\n    })\n    .catch(error => {\n      return Promise.reject(error.response);\n    })\n  }\n}\n\nexport default BookingService;\n","import React  from 'react';\nimport BookingService from '../../../services/BookingService';\nimport { Row, Col, Container } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport { Table } from 'reactstrap';\n\nclass BookingsList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      bookings: [],\n      loading: true,\n      startDate: new Date()\n    }\n  }\n\n  componentDidMount() {\n    this.fetchBookings();\n  }\n\n  fetchBookings(date) {\n    this.setState({ \n      loading: true,\n      bookings: []\n    })\n    BookingService.all(date)\n      .then(result => { \n        this.setState({ \n          bookings: result['data'],\n          loading: false\n        })\n      }) \n      .catch(err => {\n        console.log(\"error: \", err)\n      });\n  }\n  \n  renderLoader() {\n    if(this.state.loading) {\n      return(\n        <div className=\"loader\"></div>\n      );\n    }\n  }\n\n  render() {\n    return(\n      <Container fluid={true} className=\"bookings\">\n        <Row>\n          <Col sm=\"6\" xs=\"12\">\n            <h2>Reservas</h2>\n          </Col>\n        </Row>\n      \n        <div className=\"list\">\n          <Row>\n            <Col lg=\"4\" >\n              Seleccionar Fecha\n              <DatePicker\n                showPopperArrow={false}\n                selected={this.state.startDate}\n                onChange={date => { \n                  this.fetchBookings(date)\n                  this.setState({ startDate: date })\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg=\"12\" className=\"d-flex justify-content-center mb-10\">\n              {this.renderLoader()}\n            </Col>\n          </Row>\n          <Row>\n            {\n              this.state.bookings.length ? (\n                <Table responsive={true} className=\"bookings-table\">\n                  <thead>\n                    <tr>\n                      <th>Pelicula</th>\n                      <th>Comprador</th>\n                      <th>Email</th>\n                      <th>Cedula</th>\n                      <th>Celular</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      this.state.bookings.map(booking => (\n                        <tr key={booking.id}>\n                          <td>{booking.movie_name}</td>\n                          <td>{booking.name}</td>\n                          <td>{booking.email}</td>\n                          <td>{booking.identification}</td>\n                          <td>{booking.phone}</td>\n                        </tr>\n\n                      ))\n                    }\n                  </tbody>\n                </Table>\n              ) : (\n                <Col lg=\"12\" className=\"d-flex justify-content-center\">\n                  <div>No hay Reservas para listar</div>   \n                </Col>\n              )\n            }\n          </Row>\n        </div>\n      </Container>\n    )\n  }\n}\n\nexport default BookingsList;\n","import * as Yup from 'yup'\n\nexport const FormValidator = Yup.object().shape({\n  name: Yup.string()\n    .required('El nombre es requerido.'),\n  identification: Yup.string()\n    .required('La cedula es requerida.'),\n  phone: Yup.string()\n    .required('El telefono es requerido.'),\n  email: Yup.string()\n\t  .required('El email es requerido.')\n    .email('Debe ser un email valido.')\n})\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormFeedback,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n  Col,\n  Row\n} from 'reactstrap';\nimport { Formik, Form, Field, ErrorMessage} from 'formik';\nimport { FormValidator } from '../helpers/form_validator';\nimport BookingService from '../../../services/BookingService';\nimport CustomModal from '../../commons/CustomModal';\nimport errorsHandler from '../../../helpers/errors_handler';\n\nconst initialValues={\n  name: '',\n  identification: '',\n  phone: '',\n  email: ''\n}\n\nclass CreateMovie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      modalMessage: '',\n      modalTitle: ''\n    } \n  }\n\n  openModal(messageOptions, title){\n    this.setState({\n      modalMessage: messageOptions,\n      showModal: true,\n      modalTitle: title,\n    })\n  }\n\n  render() {\n    return(\n      <div>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={FormValidator}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n\n            BookingService.create(values, this.props.schedule_id)\n              .then(\n                () => {\n                  setSubmitting(false);\n                  this.openModal('La reserva fue generada correctamente', 'Reserva realizada');\n                  resetForm(initialValues);\n                },\n                err => {\n                  setSubmitting(false)\n                  this.openModal(errorsHandler(err.data.message), 'Error');\n                }\n              )\n          }}\n        >\n          {({ values, errors, isSubmitting, touched, setFieldValue, setFieldTouched }) => (\n            <Form className=\"py-4\">\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"name\" className=\"font-weight-bold\">Nombre</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"name\"\n                      id=\"name\"\n                      tag={Field}\n                      invalid={Boolean(touched.name && errors.name)}\n                      aria-required\n                    />\n                    <ErrorMessage name=\"name\" component={FormFeedback} />\n                  </FormGroup>\n                </Col>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"phone\" className=\"font-weight-bold\">Celular</Label>\n                    <Input\n                      type=\"text\"\n                      name=\"phone\"\n                      id=\"phone\"\n                      tag={Field}\n                      invalid={Boolean(touched.phone && errors.phone)}\n                      aria-required\n                    />\n                    <ErrorMessage name=\"phone\" component={FormFeedback} />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"identification\" className=\"font-weight-bold\">Cedula </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"identification\"\n                      id=\"identification\"\n                      tag={Field}\n                      invalid={Boolean(touched.identification && errors.identification)}\n                      aria-required\n                    />\n                    <ErrorMessage name=\"identification\" component={FormFeedback} />\n                  </FormGroup>\n                </Col>\n                <Col>\n                  <FormGroup>\n                    <Label for=\"email\" className=\"font-weight-bold\">Correo electronico </Label>\n                    <Input\n                      type=\"text\"\n                      name=\"email\"\n                      id=\"email\"\n                      tag={Field}\n                      invalid={Boolean(touched.email && errors.email)}\n                      aria-required\n                    />\n                    <ErrorMessage name=\"email\" component={FormFeedback} />\n                  </FormGroup>\n                </Col>\n              </Row>\n              <div className=\"d-flex justify-content-end  mt-10\">\n                <Button \n                  color=\"primary\"\n                  disabled={isSubmitting}>\n                  Reservar ahora\n                </Button> \n              </div>\n            </Form>\n          )}\n        </Formik>\n        { this.state.showModal &&\n          <CustomModal \n            show={this.state.showModal}\n            toggle={() => this.setState({ showModal: false })}\n            title={this.state.modalTitle}\n            centered\n          >\n            <Row>\n              <Col lg=\"12\">\n                {this.state.modalMessage}\n              </Col>\n            </Row>\n            <br/>\n            <Row>\n              <Col lg=\"12\" className=\"d-flex justify-content-end\">\n                <Button color=\"primary\" onClick={() => this.setState({ showModal: false })}>\n                  Aceptar\n                </Button>\n              </Col>\n            </Row>\n          </CustomModal>\n        }\n      </div>\n    )\n  }\n}\n\nCreateMovie.propTypes = {\n  schedule_id: PropTypes.number,\n}\n\nexport default CreateMovie;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport { CreateBooking } from '../../booking/index';\nimport CustomModal from '../../commons/CustomModal';\n\nclass Movie extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      newBooking: false\n    }\n  }\n\n  imageLoaded(){\n    this.setState({ loading: false });\n  }\n\n  renderLoader() {\n    if(this.state.loading) {\n      return(\n        <div className=\"loader\"></div>\n      );\n    }\n  }\n\n  newBooking() {\n    this.setState({ newBooking: true })\n  }\n\n  render() {\n    return(\n      <div className=\"movie\">\n        {this.renderLoader()}\n        <img \n          src={this.props.image_url} \n          alt={this.props.name}\n          onLoad={this.imageLoaded.bind(this)}\n        />\n        <div className=\"booking\">\n          <Button \n            color=\"primary\" \n            disabled={!this.props.can_booking} \n            onClick={() => this.newBooking()}\n          >\n            Reservar\n          </Button>\n        </div>\n        { this.state.newBooking &&\n          <CustomModal \n            show={this.state.newBooking}\n            toggle={() => this.setState({ newBooking: false })}\n            title='Reservar'\n            centered\n            closeButtonText='Close'\n            size=\"lg\"\n          >\n          <CreateBooking schedule_id={this.props.schedule_id}/>\n          </CustomModal>\n        }\n      </div>\n    )\n  }\n}\n\nMovie.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  image_url: PropTypes.string,\n  can_booking: PropTypes.bool,\n  schedule_id: PropTypes.number\n};\n\nexport default Movie;\n","import React  from 'react';\nimport MovieService from '../../../services/MovieService';\nimport Movie from './Movie';\nimport { Row, Col, Container } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport CustomModal from '../../commons/CustomModal';\nimport NewMovieButton from '../../commons/NewMovieButton';\nimport CreateMovie from './CreateMovie';\n\nclass MoviesList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      movies: [],\n      loading: true,\n      startDate: new Date(),\n      newMovie: false\n    }\n  }\n\n  componentDidMount() {\n    this.fetchMovies();\n  }\n\n  fetchMovies(date) {\n    this.setState({ \n      loading: true,\n      movies: []\n    })\n    MovieService.all(date)\n      .then(result => { \n        this.setState({ \n          movies: result['data'],\n          loading: false\n        })\n      }) \n      .catch(err => {\n        console.log(\"error: \", err)\n      });\n  }\n  \n  renderLoader() {\n    if(this.state.loading) {\n      return(\n        <div className=\"loader\"></div>\n      );\n    }\n  }\n\n  newMovie() {\n    this.setState({ newMovie: true })\n  }\n\n  render() {\n    return(\n      <Container fluid={true} className=\"movies\">\n        <Row className=\"title-container\">\n          <Col sm=\"6\" xs=\"12\" className=\"column\">\n            <h2>Peliculas</h2>\n          </Col>\n          <Col sm=\"6\" xs=\"12\" className=\"d-flex justify-content-end column\">\n            <NewMovieButton onclick={() => this.newMovie()}/>\n          </Col>\n        </Row>\n      \n        <div className=\"list\">\n          <Row>\n            <Col lg=\"4\" >\n              Seleccionar Fecha\n              <DatePicker\n                showPopperArrow={false}\n                selected={this.state.startDate}\n                onChange={date => { \n                  this.fetchMovies(date)\n                  this.setState({ startDate: date })\n                }}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg=\"12\" className=\"d-flex justify-content-center mb-10\">\n              {this.renderLoader()}\n            </Col>\n          </Row>\n          <Row>\n            \n            {\n              this.state.movies.length ? (\n              this.state.movies.map(movie => (\n                <Col lg=\"3\" sm=\"6\"className=\"column\" key={movie.id}>\n                  <Movie\n                    name={movie.name}\n                    image_url={movie.image_url} \n                    can_booking={movie.can_booking}\n                    schedule_id={movie.schedule_id}\n                  />\n                </Col>\n\n              ))) : (\n                <Col lg=\"12\" className=\"d-flex justify-content-center\">\n                  <div>No hay Peliculas para listar</div>   \n                </Col>\n              )\n            }\n          </Row>\n        </div>\n          { this.state.newMovie &&\n            <CustomModal \n              show={this.state.newMovie}\n              toggle={() => this.setState({ newMovie: false })}\n              title='Crear Pelicula'\n              centered\n              closeButtonText='Close'\n            >\n              <CreateMovie onSuccess={() => this.fetchMovies(new Date()) }/>\n            </CustomModal>\n          }\n      </Container>\n    )\n  }\n}\n\nexport default MoviesList;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { MoviesList } from './movie/index';\nimport { BookingsList } from './booking/index';\n\nfunction Yield() {\n  return (\n    <div className=\"yield\">\n      <Switch>\n        <Route path=\"/reservas\">\n          <BookingsList />\n        </Route>\n        <Route path=\"/\">\n          <MoviesList />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\nexport default Yield;\n","import React from 'react';\nimport './styles/style.scss';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport SideBar from './components/SideBar';\nimport Yield from './components/Yield';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Router>\n      \t\t<SideBar />\n      \t\t<Yield />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('typeface-montserrat-alternates')\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}